@using System.Globalization
@model EditProjectViewModel
<div class="container-fluid pt-4 px-4 h-100">
    <div class="row g-4">
            <!-- Project base info-->
        <div class="col-sm-8 col-lg-8 bg-light">
            <form asp-area="Customer" asp-controller="Project" asp-action="Edit" method="post">
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="UserId" />
                <input type="hidden" asp-for="CreatedDate" />
                <div class=" p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                    <h6 class="">Projeni Düzenle</h6>
                        <a asp-area="Customer" asp-controller="PTask" asp-action="AddTask" asp-route-projectId="@Model.Id" class="btn btn-warning btn-sm">Yeni Görev Ata</a>
                    </div>
                    <div class="row g-2">
                        <div class=" col-sm-6">
                            <div class="form-floating mb-3">
                                <input placeholder="Name" type="text" class="form-control" asp-for="Name">
                                <label class="form-label" asp-for="Name" ></label>
                            </div>
                            <div class="form-floating mb-3">
                                <textarea class="form-control" asp-for="Description" placeholder="Açıklama" style="height:215px"></textarea>
                                <label asp-for="Description"></label>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" asp-for="EndDate">
                                <label class="form-label" asp-for="EndDate"></label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="text" class="form-control" asp-for="Budget">
                                <label class="form-label" asp-for="Budget"></label>
                            </div>
                            <div class="form-floating mb-3">
                                <select class="form-select form-select-sm mb-4" asp-for="Status">
                                    <option value="0">Devam Ediyor</option>
                                    <option value="1">Tamamlandı</option>
                                    <option value="2">Hatalı</option>
                                    <option value="3">Beklemede</option>
                                </select>
                                <label for="Status">Durum</label>
                            </div>
                            <div class="form-floating mb-3">
                                <select class="form-select" asp-for="Priority">
                                    <option value="0">Düşük</option>
                                    <option value="1">Orta</option>
                                    <option value="2">Yüksek</option>
                                    <option value="3">Kritik</option>
                                </select>
                                <label for="Priority">Önceliği</label>
                            </div>
                        </div>
                    </div>
                </div>
                <button class="btn btn-success w-100 mb-3" type="submit">Değişiklikleri Kaydet</button>
            </form>
        </div>
            <!-- TeamMembers-->
            <div class="col-sm-4 col-lg-4 bg-light">
            <div class=" p-4">
                    @if(Model.TeamMembers!=null && Model.TeamMembers.Count > 0)
                    {
                        <div class="h-100 bg-light rounded p-4">
                            <div class="d-flex align-items-center justify-content-between mb-2">
                                <h6 class="mb-0">Takım Arkadaşları</h6>
                                <a asp-area="Customer" asp-controller="TeamMember" asp-action="AddTeamMember" asp-route-projectId="@Model.Id">Takım arkadaşı ekle</a>
                            </div>
                            @foreach(var m in Model.TeamMembers)
                            {
                                <div class="d-flex align-items-center border-bottom py-3">
                                    <img class="rounded-circle flex-shrink-0" src="~/customer/img/user.jpg" alt="" style="width: 40px; height: 40px;">
                                    <div class="w-100 ms-3">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h6 class="mb-0">@m.FullName</h6>
                                        <button onclick="removeTeamMember(@m.Id)" class="btn btn-danger"><i class="fas fa-trash"></i></button>
                                        </div>
                                        <div>@m.UserName</div>
                                        <div><strong>Rol:</strong> @m.ProjectRole.GetDisplayName()</div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="h-100 bg-light rounded p-4">
                            <div class="d-flex align-items-center justify-content-between mb-2">
                                <h6 class="mb-0">Takım Arkadaşları</h6>
                                <a asp-area="Customer" asp-controller="TeamMember" asp-action="AddTeamMember" asp-route-projectId="@Model.Id">Takım arkadaşı ekle</a>
                            </div>
                            <div>Takım arkaşı bulunamadı</div>
                        </div>
                    }
                </div>
        </div>
    </div>
    <!-- PTasks-->
    <div class="row g-4">
            <!--Tasks-->
            @if (Model.PTasks != null && Model.PTasks.Count > 0)
            {
            <div class="col-sm-12 bg-light">
                    <div class=" p-4">
                        <table id="myDataTable" class="table text-start align-middle table-bordered table-hover mb-0">
                            <thead>
                                <tr class="text-dark">
                                    <th scope="col">Görev Adı</th>
                                    <th scope="col">Açıklaması</th>
                                    <th scope="col">Kimin Görevi</th>
                                    <th scope="col">Öncelik</th>
                                    <th scope="col">Durum</th>
                                    <th scope="col">Bitiş Tarihi</th>
                                    <th scope="col">Süre</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var t in Model.PTasks)
                                {
                                    <tr data-project-id="@t.Id">
                                        <td>@t.Name</td>
                                        @{
                                            int lenght = t.Description.Length >= 30 ? 30 : t.Description.Length;
                                        }
                                        <td>@t.Description.Substring(0, lenght)@(t.Description.Length > 30 ? "..." : "")</td>
                                        <td>@t.UserName</td>
                                        <td>
                                            <select class="form-select form-select-sm" onchange="changePriority(this, @t.Id)" asp-for="@t.Priority">
                                                <option value="0">Düşük</option>
                                                <option value="1">Orta</option>
                                                <option value="2">Yüksek</option>
                                                <option value="3">Kritik</option>
                                            </select>
                                        </td>
                                        <td>
                                        <select class="form-select form-select-sm" onchange="changeStatus(this, @t.Id)" asp-for="@t.Status">
                                                <option value="0">Devam ediyor</option>
                                                <option value="1">Tamamlandı</option>
                                                <option value="2">Hatalı</option>
                                                <option value="3">Beklemede</option>
                                            </select>
                                        </td>
                                        <td>@t.DueDate.ToString("dd-MM-yyyy") @CultureInfo.GetCultureInfo("tr-TR").DateTimeFormat.GetDayName(t.DueDate.DayOfWeek)</td>
                                        <td>
                                            <div class="pg-bar mb-3">
                                                <div class="progress">
                                                @{
                                                    string timeBarColor = "";
                                                    if (t.ProgressTimePercentage <= 25)
                                                    {
                                                        timeBarColor = "bg-success";
                                                    }
                                                    else if (t.ProgressTimePercentage <= 50)
                                                    {
                                                        timeBarColor = "bg-info";
                                                    }
                                                    else if (t.ProgressTimePercentage <= 75)
                                                    {
                                                        timeBarColor = "";
                                                    }
                                                    else if (t.ProgressTimePercentage < 100)
                                                    {
                                                        timeBarColor = "bg-warning";
                                                    }
                                                    else
                                                    {
                                                        timeBarColor = "bg-danger";
                                                    }
                                                }
                                                    <div class="progress-bar progress-bar-striped @timeBarColor" role="progressbar"  aria-valuenow="@t.ProgressTimePercentage" aria-valuemin="0" aria-valuemax="100"></div>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="m-n2 pb-3 pt-1 d-flex justify-content-evenly align-content-center">
                                                <a asp-area="Customer" asp-controller="PTask" asp-action="Edit" asp-route-pTaskId="@t.Id" class="btn btn-warning btn-md"><i class="far fa-edit"></i></a>
                                                <button onclick="removePTask(@t.Id)" class="btn btn-danger btn-md"><i class="fas fa-trash"></i></button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
    </div>
</div>
@section Styles{
    @await Html.PartialAsync("_DataTablesStylesPartial")
}
@section Scripts{
    @await Html.PartialAsync("_DataTablesScriptsPartial")
}
@section TopScripts {
    <script>
        const changeStatus = function (element, pTaskId) {
            var status = element.options[element.selectedIndex].value;
            $.ajax({
                url: '/Customer/PTask/ChangeStatus',
                method: 'POST',
                data: {
                    pTaskId: pTaskId,
                    status: status
                },
                success: function (response) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.onmouseenter = Swal.stopTimer;
                            toast.onmouseleave = Swal.resumeTimer;
                        }
                    });
                    Toast.fire({
                        icon: response.icon,
                        title: response.title
                    });
                }
            });
        }
        const changePriority = function (element, pTaskId) {
            var priority = element.options[element.selectedIndex].value;
            $.ajax({
                url: '/Customer/PTask/ChangePriority',
                method: 'POST',
                data: {
                    pTaskId: pTaskId,
                    priority: priority
                },
                success: function (response) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.onmouseenter = Swal.stopTimer;
                            toast.onmouseleave = Swal.resumeTimer;
                        }
                    });
                    Toast.fire({
                        icon: response.icon,
                        title: response.title
                    });
                }
            });
        }
        const removePTask = function (pTaskId) {
            Swal.fire({
                title: 'Silmek istediğinize emin misiniz?',
                text: "Silinen görev geri getirelemeyecek!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/Customer/PTask/Remove?pTaskId=' + pTaskId;
                }
            });
        }
        const removeTeamMember = function (id) {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Takım arkadaşı görevleri ile birlikte projeden çıkartılacak",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/Customer/TeamMember/RemoveTeamMember?id=' + id;
                }
            });
        }
    </script>
}